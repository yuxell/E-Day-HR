@using KD25_BitirmeProjesi.UI.MVC_Core.Areas.Personel.Models.Enums
@using KD25_BitirmeProjesi.UI.MVC_Core.Areas.Personel.Models.ViewModels.Expence_VMs
@using KD25_BitirmeProjesi.UI.MVC_Core.Utilities



@model IEnumerable<ListExpence_VM>

@{
    ViewData["Title"] = "Harcama Taleblerim";
}

@if (Model != null && Model.Any())
{
    <div class="col-lg-100 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Harcama Taleplerim</h4>
                <p class="card-description">
                    Harcama Talep işlemleri
                </p>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Harcama Türü</th>
                            <th>Para Miktarı.</th>
                            <th>Para Birimi.</th>
                            <th>Açıklama</th>
                            <th>Durum</th>
                            <th>İşlem</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.ID">
                                <td>@item.ExpenceType</td>
                                <td>@item.Amount.ToString("N2")</td>
                                <td>@item.Currency</td>
                                <td>@item.Explanation</td>
                                <td>
                                    @if (item.ApprovalStatus == ApprovalStatus.Approved)
                                    {
                                        <label class="badge badge-success">@item.ApprovalStatus</label>
                                    }
                                    else if (item.ApprovalStatus == ApprovalStatus.Cancelled)
                                    {
                                        @* Silinmiş olduğu için gelmiyor ve gösterilmeyecek bu kısım *@
                                        <label class="badge badge-info">@item.ApprovalStatus</label>
                                    }
                                    else if (item.ApprovalStatus == ApprovalStatus.Denied)
                                    {
                                        <label class="badge badge-danger">@item.ApprovalStatus</label>
                                    }else{
                                        <label class="badge badge-warning">@item.ApprovalStatus</label>
                                    }
                                </td>
                                <td>
                                    @if (item.ApprovalStatus == ApprovalStatus.Pending)
                                    {
                                        <button type="submit" class="btn btn-sm btn-danger delete-btn" data-id="@item.ID">Sil</button>

                                        @* Fetch ile yapılacak daha sonra *@

                                        @* <form asp-action="Cancel" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@item.ID" />
                                            <button type="submit" class="btn btn-sm btn-danger delete-btn"
                                                    onclick="return confirm('Bu izin iptal edilecek. Emin misiniz?')">
                                                Cancel
                                            </button>
                                        </form> *@

                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>


}
else
{
    <tr>
        <td colspan="6">Hiç Harcama bulunamadı.</td>
    </tr>
}

@* Toast Kutusu *@
<div id="toast" style="position: fixed; bottom: 20px; right: 20px; display: none; padding: 15px; background: green; color: white; border-radius: 5px; z-index: 9999;"></div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const row = this.closest("tr");

                if (confirm("Silmek istediğinize emin misiniz?")) {
                    fetch(`https://localhost:7071/api/Expence/Cancel/${id}`, {
                        method: "PUT"
                    })
                        .then(response => {
                        if (response.ok) {
                            // Fade out ve satır silme
                            row.style.transition = "opacity 0.5s ease";
                            row.style.opacity = 0;
                            setTimeout(() => row.remove(), 500);

                            // Toast göster
                            showToast("Harcama talebi başarıyla iptal edildi.", true);
                        } else {
                            response.text().then(msg => showToast(msg, false));
                        }
                    })
                    .catch(error => {
                        showToast("Bir hata oluştu: " + error.message, false);
                    });
                }
            });
        });

        function showToast(message, isSuccess) {
            const toast = document.getElementById("toast");
            toast.textContent = message;
            toast.style.backgroundColor = isSuccess ? "#28a745" : "#dc3545";
            toast.style.display = "block";
            setTimeout(() => { toast.style.display = "none"; }, 3000);
        }
    });
</script>
